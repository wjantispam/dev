#!/bin/bash
# background-loop.sh

for i in 1 2 3 4 5 6 7 8 9 10            # 첫 번째 loop.
do
  echo -n "$i "
done & # 이 loop는 백그라운드에서 실행되기 때문에,
       # 두 번째 루프 다음에 실행되는 경우도 있습니다.

echo   # 이 'echo'가 가끔 표시되지 않을 수도 있습니다.

for i in 11 12 13 14 15 16 17 18 19 20   # 두 번째 loop.
do
  echo -n "$i "
done

echo   # 이 'echo'가 가끔 표시되지 않을 수도 있습니다.

# ======================================================

# 스크립트의 예상 출력:
# 1 2 3 4 5 6 7 8 9 10
# 11 12 13 14 15 16 17 18 19 20

# 이렇게 출력될 수도 있습니다:
# 11 12 13 14 15 16 17 18 19 20
# 1 2 3 4 5 6 7 8 9 10 bozo $
# (두번째 'echo'는 왜 출력되지 않았지?)

# 이렇게 출력될 수도 있습니다:
# 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
# (첫번째 'echo'는 왜 출력되지 않았지?)

# 매우 드물게 이렇게 출력될 수도 있습니다:
# 11 12 13 1 2 3 4 5 6 7 8 9 10 14 15 16 17 18 19 20
# 포그라운드 loop가 백그라운드보다 선점함

exit 0

#  Nasimuddin Ansari는 6라인과 14라인의 echo -n "$i" 뒤에
#+ sleep 1을 추가하면 정말 재미있는 결과를 가져올 것이라 합니다.